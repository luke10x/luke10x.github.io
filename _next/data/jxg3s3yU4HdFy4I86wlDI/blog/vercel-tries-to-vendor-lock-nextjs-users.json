{"pageProps":{"frontmatter":{"slug":"/blog/vercel-tries-to-vendor-lock-nextjs-users","date":"2023-03-26","title":"Vercel tries to vendor lock Next.js users","socialImage":"social-img/jekyll.png","draft":false},"content":"\nAs someone who recently migrated their blog (this very website) from Gatsby to Next.js, \nI can attest to the challenges involved in the process. \nWhile Gatsby may have been a trendy solution in the past, \nI found that it lacked the features and flexibility.\nNext.js seems to be much better static site generator than Gatsby,\neven though Gatsby actually is a Static Site Generator, while Next.js is not.\n\nHowever, while Next.js offers many advantages over Gatsby, \nI was frustrated by some of the drawbacks of using the framework, \nparticularly the way in which Vercel seems to lock users into their hosting platform. \n\nTo begin with, Vercel is the company that maintains the Next.js framework,\nwhich is currently the most popular React-based framework. \nWhile this may seem like a good thing at first glance, \nit means that Vercel has a significant amount of control\nover the development and direction of Next.js.\n\nOne way in which Vercel tries to keep Next.js users locked into their hosting platform\nis by making it difficult to deploy Next.js applications anywhere else. \nThey achieve that by constantly changing build options\nmaking difficult to search online of working step-by-step guides\nto deploy Next.Js application as static frontend application,\ndecoupled of their Node based runtime.\n\nWhat if my backends for better or wores are in Java?\nOr what if I want to take advantage of\nCDN or AWS S3 deployment.\nOr like in this case I just want to push it to GitHub Pages?\n\nAll of that is getting increasingly hard until users might just give up\nand they may feel pressured to use Vercel's platform to avoid these challenges, \neven if they would prefer to deploy their applications elsewhere.\n\nAs I worked on deploying your Next.js application on GitHub Pages,\nI discovered that GitHub was trying to build your pages as Jekyll sites, \nwhich was causing some significant issues. \nSpecifically, it was \"eating\" the assets like CSS of my website,\nleaving your it broken and non-functional.\n\nAfter some investigation, I discovered that if there was a directory starting with an '_' on GitHub Pages, \nthe platform would automatically try to build the files with Jekyll, \nregardless of whether or not they were Jekyll-based. \nJekyll is probabply the first Static Site Generator that achived signifficant popularity,\nalthough I am not entirelly sure wheather it is still as popular as it use to be.\nNobody is using it anymore basically...\n\nFortunately, I eventually discovered that\n**dropping a .nojekyll file into the root of your public directory**\nwould prevent GitHub Pages from building your files with Jekyll,\nand allow the assets to be properly displayed on your website. \n\nInterestingly, I also began to suspect that Vercel might intentionally ship their assets in the _next directory\n(starting with an underscore), making it more challenging to deploy Next.js on GitHub Pages. \nWhile I have no proves of such deliberate action, obviously it is a reasonable accusation!\nThis could be part of their strategy to make Next.js users more likely to choose Vercel for hosting,\nas it's easier than dealing with the complications involved in deploying Next.js on GitHub Pages.\n\nWhat can I say? Sometimes life just simply is not easy. \nThankfully, I was able to successfully deploy my Next.js application on GitHub Pages, \nalbeit after a great deal of persistence and effort. \n"},"__N_SSG":true}